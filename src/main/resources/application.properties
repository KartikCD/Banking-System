# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
#spring.datasource.url = jdbc:mysql://onlinebank.cmipi6ia8q38.ap-south-1.rds.amazonaws.com:3306/onlinebanking
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
## Username and secret
#spring.datasource.username = admin
#spring.datasource.password = Keval321*

spring.datasource.url = jdbc:mysql://192.168.1.100:3306/banks
spring.datasource.driverClassName=com.mysql.jdbc.Driver
# Username and secret
spring.datasource.username = kartik
spring.datasource.password = kartik


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true
server.ssl.enabled = false
#server.ssl.enabled-protocols = TLSv1.2
server.ssl.protocol = TLS
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

